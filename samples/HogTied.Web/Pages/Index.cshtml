@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

@if (!string.IsNullOrEmpty(Model.StatusMessage)) {
    <div class="alert alert-success mt-3" role="alert">
        @Model.StatusMessage
    </div>
}

<div class="container mt-5">
    <div class="text-center">
        <h1 class="display-4">Welcome</h1>
        <p class="lead">
            This is a sample web application that demonstrates using the
            PostHog .NET SDK.
        </p>
        @if (Model.UserId is null) {
            <p class="text-danger">You are not logged in.</p>
        }
        else {
            <p class="text-success">You are logged in with id <code>@Model.UserId</code>.</p>
        }
    </div>
    <div>
        @if (!Model.ApiKeyIsSet) {
            <div class="alert alert-warning mt-3" role="alert">
                The project API key is not set.
                You can use the following command to set the key in the root of
                this project:
                <br />
                <code>script/user-secrets set PostHog:ProjectApiKey your-api-key</code>
            </div>
        }
        else {
            <div class="alert alert-info mt-3" role="alert">
                <strong>The Project API Key is set! We're ready to go!</strong>
            </div>

            <div class="d-flex justify-content-between px-3">
                <div>
                    <h2 class="mt-5">PostHog Client Configuration</h2>

                    <table class="table table-auto mt-3">
                        <thead class="thead-dark">
                        <tr>
                            <th>Option</th>
                            <th>Value</th>
                        </tr>
                        </thead>
                        <tbody>
                        <tr>
                            <td><code>HostUrl</code></td>
                            <td>@Model.PostHogOptions.HostUrl</td>
                        </tr>
                        <tr>
                            <td data-tippy-content="When events are sent to PostHog, they are sent in batches via the <code>/batch</code> endpoint. This option specifies the maximum number of events to send in a single batch.">
                                <code>MaxBatchSize ℹ️</code>
                            </td>
                            <td>@Model.PostHogOptions.MaxBatchSize</td>
                        </tr>
                        <tr>
                            <td data-tippy-content="The number of events to capture before sending to PostHog"><code>FlushAt</code></td>
                            <td>@Model.PostHogOptions.FlushAt events</td>
                        </tr>
                        <tr>
                            <td data-tippy-content="The interval between periodic flushes"><code>FlushInterval</code></td>
                            <td>@Model.PostHogOptions.FlushInterval.TotalSeconds seconds</td>
                        </tr>
                        </tbody>
                    </table>
                </div>
                <div class="ml-3">
                    <h2 class="mt-5">Feature Flags</h2>
                    <table class="table table-auto table-striped mt-3">
                    <thead class="thead-dark">
                    <tr>
                        <th>Feature</th>
                        <th>Enabled</th>
                        <th>Notes</th>
                    </tr>
                    </thead>
                    <tbody>
                    <tr>
                        <td>hogtied-homepage-bonanza</td>
                        <td>@Model.BonanzaEnabled</td>
                        <td>Enabled for 100%</td>
                    </tr>
                    <tr>
                        <td>hogtied-homepage-user</td>
                        <td>@Model.HomepageUser</td>
                        <td>Enabled for 80%</td>
                    </tr>
                    </tbody>
                </table>
                </div>
            </div>

            <div class="mt-3">
                <div class="row justify-content-center">
                    <p>Click this button to capture an event:</p>
                    <div class="col-md-6">
                        <form method="post">
                            <div class="form-group mb-2">
                                <label asp-for="EventName">Event Name</label>
                                <input asp-for="EventName" class="form-control" placeholder="Enter event name" />
                            </div>
                            @if (Model.UserId is null) {
                                <div class="form-group mb-2">
                                    <label asp-for="FakeUserId">User Id</label>
                                    <input asp-for="FakeUserId" class="form-control" placeholder="Enter a user id"/>
                                    <p class="text-muted small">
                                        Because you are not logged in, we don't know your user id. For the sake of
                                        testing, you can just make one up! It can be anything that makes sense to you.
                                    </p>
                                </div>
                            }

                            <button type="submit" class="btn btn-primary mb-2">Send Event</button>
                        </form>
                        <p class="text-muted small">
                            This sample app will automatically flush events every
                            @Model.PostHogOptions.FlushInterval.TotalSeconds seconds or
                            when every @Model.PostHogOptions.FlushAt event is captured.
                        </p>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
